# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import store_pb2 as store__pb2


class StoreServiceStub(object):
    """Define o serviço gRPC StoreService
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPrice = channel.unary_unary(
                '/store.StoreService/GetPrice',
                request_serializer=store__pb2.GetPriceRequest.SerializeToString,
                response_deserializer=store__pb2.GetPriceResponse.FromString,
                )
        self.Purchase = channel.unary_unary(
                '/store.StoreService/Purchase',
                request_serializer=store__pb2.PurchaseRequest.SerializeToString,
                response_deserializer=store__pb2.PurchaseResponse.FromString,
                )
        self.Shutdown = channel.unary_unary(
                '/store.StoreService/Shutdown',
                request_serializer=store__pb2.EndRequest.SerializeToString,
                response_deserializer=store__pb2.EndResponse.FromString,
                )


class StoreServiceServicer(object):
    """Define o serviço gRPC StoreService
    """

    def GetPrice(self, request, context):
        """RPC para obter o preço de um item
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Purchase(self, request, context):
        """RPC para realizar uma compra
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Shutdown(self, request, context):
        """RPC para encerrar a execução do serviço
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StoreServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrice,
                    request_deserializer=store__pb2.GetPriceRequest.FromString,
                    response_serializer=store__pb2.GetPriceResponse.SerializeToString,
            ),
            'Purchase': grpc.unary_unary_rpc_method_handler(
                    servicer.Purchase,
                    request_deserializer=store__pb2.PurchaseRequest.FromString,
                    response_serializer=store__pb2.PurchaseResponse.SerializeToString,
            ),
            'Shutdown': grpc.unary_unary_rpc_method_handler(
                    servicer.Shutdown,
                    request_deserializer=store__pb2.EndRequest.FromString,
                    response_serializer=store__pb2.EndResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'store.StoreService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StoreService(object):
    """Define o serviço gRPC StoreService
    """

    @staticmethod
    def GetPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/store.StoreService/GetPrice',
            store__pb2.GetPriceRequest.SerializeToString,
            store__pb2.GetPriceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Purchase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/store.StoreService/Purchase',
            store__pb2.PurchaseRequest.SerializeToString,
            store__pb2.PurchaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Shutdown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/store.StoreService/Shutdown',
            store__pb2.EndRequest.SerializeToString,
            store__pb2.EndResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
